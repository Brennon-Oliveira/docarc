#!/usr/bin/env bash

if [ -f ./docaGit/.help ]; then
	source ./docaGit/.help
fi

docaGit() {
	if [ "$3" = '-h' -o "$3" = '--help' ]; then
		gitHelp $2
	elif [ "$2" = "commit" ]; then
		docaGitCommit $*
	elif [ "$2" = "pull" ]; then
		docaGitPull $*
	else
		gitHelp
	fi
}

docaGitPull() {
	echo '-----------'
	echo 'Doca Pull'
	echo "git stash:"
	git stash
	echo "-----------\n"
	echo 'git pull --rebase:'
	git pull --rebase
	echo '-----------'
	echo "git stash apply:"
	git stash apply
	echo "-----------\n"
}

docaGitCommit() {
	echo '-----------'
	echo 'Doca Commit'
	typeBranch=''
	branch=''
	commit=''
	if [ $5 ]; then
		echo "git stash:"
		git stash
		echo "-----------\n"
		#echo "git stash"
		typeBranch=$3
		branch=$4
		commit=$5
		if [ "${typeBranch}" = 'sprint' -o "${typeBranch}" = "feature" ]; then
			echo "git checkout sprint:"
			git checkout sprint
			echo "-----------\n"
		elif [ "${typeBranch}" = 'bugfix' -o "${typeBranch}" = "homolog" ]; then
			echo "git checkout homolog:"
			git checkout homolog
			echo "-----------\n"
		elif [ "${typeBranch}" = 'preprod' ]; then
			echo "git checkout master-rc:"
			git checkout master-rc
			echo "-----------\n"
		elif [ "${typeBranch}" = 'hotfix' -o "${typeBranch}" = "master" -o "${typeBranch}" = "prod" ]; then
			echo "git checkout master:"
			git checkout master
			echo "-----------\n"
		else
			alertErro git 'Defina um tipo de branch válido'
			return
		fi
	elif [ $4 ]; then
		echo "git stash:"
		git stash
		echo "-----------\n"
		#echo "git stash"
		branch=$3
		commit=$4
	else
		alertErro git "Defina a branch que deseja utilizar"
		return
	fi

	echo "git pull --rebase:"
	git pull --rebase
	echo "-----------\n"
	echo "git branch 'PLT-${branch}':"
	git branch "PLT-${branch}"
	echo "-----------\n"
	echo "git checkout 'PLT-${branch}':"
	git checkout "PLT-${branch}"
	echo "-----------\n"
	echo "git stash apply:"
	git stash apply
	echo "-----------\n"
	echo "${DocaWhite}Adicione os arquivos desejados para o commit."
	echo "${DocaWhite}Então pressione ${DocaBlue}Enter ${DocaWhite}para prosseguir"
	read
	curDate=$(date +"%d/%m/%Y %H:%M")
	echo "git commit -m 'Fix PLT-${branch}: ${commit} - ${curDate}' -n:"
	git commit -m "Fix PLT-${branch}: ${commit}" -n
	echo "-----------\n"
	echo "git push -u origin 'PLT-${branch}':"
	git push -u origin "PLT-${branch}"
	echo "-----------\n"
}
