#!/usr/bin/env bash

if [ -f ./docaGit/.help ]; then
	source ./docaGit/.help
fi

docaGit(){
	if [ "$3" = '-h' -o "$3" = '--help' ]; then
		gitHelp $2
	elif [ "$2" = "commit" ]; then
		docaGitCommit $*
	else
		gitHelp
	fi
}

docaGitCommit(){
	echo '-----------'
	echo 'Doca commit'
	echo '-----------'
	typeBranch=''
	branch=''
	commit=''
	# git stash
	echo "git stash"
	if [ $5 ]; then
		typeBranch=$3
		branch=$4
		commit=$5
		if [ "${typeBranch}" = 'sprint' -o "${typeBranch}" = "feature" ]; then
    	echo 'sprint'
		  # git checkout sprint
		elif [ "${typeBranch}" = 'bugfix' -o "${typeBranch}" = "homolog" ]; then
		  echo 'homolog'
		  # git checkout homolog
		elif [ "${typeBranch}" = 'preprod' ]; then
		  echo 'preprod'
		  # git checkout master-rc
		elif [ "${typeBranch}" = 'hotfix' -o "${typeBranch}" = "master" -o "${typeBranch}" = "prod" ]; then
		  echo 'master'
		  # git checkout master
		else
			alertErro git 'Defina um tipo de branch v√°lido'
			return
		fi
	elif [ $4 ]; then
		branch=$3
		commit=$4
	else
		alertErro git "Defina a branch que deseja utilizar"
		return
	fi
	
	#git pull --rebase
	echo "Git pull"
	#git checkout -b "PLT-${branch}"
	echo "Checkout na PLT-${branch}"
	#git stash apply
	echo "git stash apply"
	#git commit "Fix PLT-${branch}: ${commit}" -n
	echo "Commit: Fix PLT-${branch}: ${commit}"
	#git push -u origin "${branch}"
	echo "Push origin PLT-${branch}"

}

alertErro(){
	if [ $1 = "git" ]; then
		echo "$2 (doca git <Comando> -h)"
	fi
}

